<?xml version="1.0" encoding="utf-8" ?>
<Configuration>
    <SelectionSets>
            <SelectionSet>
                <Name>OptionHeaderTypes</Name>
                <Types>
                    <TypeName>PE.IMAGE_OPTIONAL_HEADER</TypeName>
                    <TypeName>PE.IMAGE_OPTIONAL_HEADER64</TypeName>
                </Types>
            </SelectionSet>
            <SelectionSet>
                <Name>NTHeaderTypes</Name>
                <Types>
                    <TypeName>PE.IMAGE_NT_HEADERS</TypeName>
                    <TypeName>PE.IMAGE_NT_HEADERS64</TypeName>
                </Types>
            </SelectionSet>
        </SelectionSets>
    <ViewDefinitions>
        <View>
            <Name>PEView</Name>
            <ViewSelectedBy>
                <TypeName>PE.ParsedPE</TypeName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>ProcessID</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>BaseAddress</Label>
                                <!-- It is possible for a 32-bit image to be loaded in a 64-bit process -->
                                <ScriptBlock>if ($_.BaseAddress) {"0x$($_.BaseAddress.ToString('X16'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>ModuleName</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Bits</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>DOSHeader</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>NTHeader</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>SectionHeaders</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>ImportDirectory</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Imports</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>ExportDirectory</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Exports</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>DebugInfo</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>OptionalHeaderView</Name>
            <ViewSelectedBy>
                <SelectionSetName>OptionHeaderTypes</SelectionSetName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Magic</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MajorLinkerVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MinorLinkerVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfCode</Label>
                                <ScriptBlock>if ($_.SizeOfCode) {"0x$($_.SizeOfCode.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfInitializedData</Label>
                                <ScriptBlock>if ($_.SizeOfInitializedData) {"0x$($_.SizeOfInitializedData.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfUninitializedData</Label>
                                <ScriptBlock>if ($_.SizeOfUninitializedData) {"0x$($_.SizeOfUninitializedData.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>AddressOfEntryPoint</Label>
                                <ScriptBlock>if ($_.AddressOfEntryPoint) {"0x$($_.AddressOfEntryPoint.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>BaseOfCode</Label>
                                <ScriptBlock>if ($_.BaseOfCode) {"0x$($_.BaseOfCode.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>BaseOfData</Label>
                                <ScriptBlock>if ($_.BaseOfData) {"0x$($_.BaseOfData.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ImageBase</Label>
                                <ScriptBlock>if ($_.Magic.ToString() -eq 'PE32') { "0x$($_.ImageBase.ToString('X8'))" } else { "0x$($_.ImageBase.ToString('X16'))" }</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SectionAlignment</Label>
                                <ScriptBlock>if ($_.SectionAlignment) {"0x$($_.SectionAlignment.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>FileAlignment</Label>
                                <ScriptBlock>if ($_.FileAlignment) {"0x$($_.FileAlignment.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MajorOperatingSystemVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MinorOperatingSystemVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MajorSubsystemVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MinorSubsystemVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Win32VersionValue</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfImage</Label>
                                <ScriptBlock>if ($_.SizeOfImage) {"0x$($_.SizeOfImage.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfHeaders</Label>
                                <ScriptBlock>if ($_.SizeOfHeaders) {"0x$($_.SizeOfHeaders.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>CheckSum</Label>
                                <ScriptBlock>if ($_.CheckSum) {"0x$($_.CheckSum.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Subsystem</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>DllCharacteristics</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfStackReserve</Label>
                                <ScriptBlock>if ($_.Magic.ToString() -eq 'PE32') { "0x$($_.SizeOfStackReserve.ToString('X8'))" } else { "0x$($_.SizeOfStackReserve.ToString('X16'))" }</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfStackCommit</Label>
                                <ScriptBlock>if ($_.Magic.ToString() -eq 'PE32') { "0x$($_.SizeOfStackCommit.ToString('X8'))" } else { "0x$($_.SizeOfStackCommit.ToString('X16'))" }</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfHeapReserve</Label>
                                <ScriptBlock>if ($_.Magic.ToString() -eq 'PE32') { "0x$($_.SizeOfHeapReserve.ToString('X8'))" } else { "0x$($_.SizeOfHeapReserve.ToString('X16'))" }</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfHeapCommit</Label>
                                <ScriptBlock>if ($_.Magic.ToString() -eq 'PE32') { "0x$($_.SizeOfHeapCommit.ToString('X8'))" } else { "0x$($_.SizeOfHeapCommit.ToString('X16'))" }</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>LoaderFlags</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>NumberOfRvaAndSizes</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>DataDirectory</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
		    <Name>SectionHeaderView</Name>
                <ViewSelectedBy>
		            <TypeName>PE.IMAGE_SECTION_HEADER</TypeName>
		        </ViewSelectedBy>
                <TableControl>
                    <AutoSize/>
                    <TableHeaders>
                        <TableColumnHeader>
                            <Label>Name</Label>
                            <Alignment>Right</Alignment>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>VirtualSize</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>VirtualAddress</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>SizeOfRawData</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>PointerToRawData</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Characteristics</Label>
                            <Alignment>Left</Alignment>
                        </TableColumnHeader>
                    </TableHeaders>
                    <TableRowEntries>
                        <TableRowEntry>
                            <TableColumnItems>
                                <TableColumnItem>
                                    <Alignment>Right</Alignment>
                                    <PropertyName>Name</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.VirtualSize) {"0x$($_.VirtualSize.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.VirtualAddress) {"0x$($_.VirtualAddress.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.SizeOfRawData) {"0x$($_.SizeOfRawData.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.PointerToRawData) {"0x$($_.PointerToRawData.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>Characteristics</PropertyName>
                                </TableColumnItem>
                            </TableColumnItems>
                        </TableRowEntry>
                    </TableRowEntries>
                </TableControl>
        </View>
        <View>
            <Name>NTHeaderView</Name>
            <ViewSelectedBy>
                <SelectionSetName>NTHeaderTypes</SelectionSetName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Signature</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>FileHeader</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>OptionalHeader</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>FileHeaderView</Name>
            <ViewSelectedBy>
                <TypeName>PE.IMAGE_FILE_HEADER</TypeName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Machine</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>NumberOfSections</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>TimeDateStamp</Label>
                                <!-- GMT compile time -->
                                <ScriptBlock>(New-Object DateTime(1970, 1, 1, 0, 0, 0)).AddSeconds($_.TimeDateStamp)</ScriptBlock>
                                <!-- Compile time assuming it was compiled in Redmond, Washington (PST - GMT-8) -->
                                <!-- <ScriptBlock>(New-Object DateTime(1969, 12, 31, 16, 0, 0)).AddSeconds($_.TimeDateStamp)</ScriptBlock> -->
                            </ListItem>
                            <ListItem>
                                <PropertyName>PointerToSymbolTable</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>NumberOfSymbols</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>SizeOfOptionalHeader</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Characteristics</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>DataDirectoryView</Name>
                <ViewSelectedBy>
		            <TypeName>PE.IMAGE_DATA_DIRECTORY</TypeName>
		        </ViewSelectedBy>
                <TableControl>
                    <AutoSize/>
                    <TableHeaders>
                        <TableColumnHeader>
                            <Label>VirtualAddress</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Size</Label>
                        </TableColumnHeader>
                    </TableHeaders>
                    <TableRowEntries>
                        <TableRowEntry>
                            <TableColumnItems>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.VirtualAddress) {"0x$($_.VirtualAddress.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.Size) {"0x$($_.Size.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                            </TableColumnItems>
                        </TableRowEntry>
                    </TableRowEntries>
                </TableControl>
        </View>
        <View>
            <Name>CodeViewInfoView</Name>
            <ViewSelectedBy>
		            <TypeName>PE.CodeViewInfo</TypeName>
		        </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Signature</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>GUID</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Age</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>PDB</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>DebugDirView</Name>
            <ViewSelectedBy>
		            <TypeName>PE.DebugDir</TypeName>
		        </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>Characteristics</Label>
                                <ScriptBlock>"0x$($_.Characteristics.ToString('X8'))"</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>TimeDateStamp</Label>
                                <ScriptBlock>(New-Object DateTime(1970, 1, 1, 0, 0, 0)).AddSeconds($_.TimeDateStamp)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MajorVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>MinorVersion</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Type</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>SizeOfData</Label>
                                <ScriptBlock>"0x$($_.SizeOfData.ToString('X8'))"</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>AddressOfRawData</Label>
                                <ScriptBlock>"0x$($_.AddressOfRawData.ToString('X8'))"</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>PointerToRawData</Label>
                                <ScriptBlock>"0x$($_.PointerToRawData.ToString('X8'))"</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>CodeViewInfo</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>ImportDirView</Name>
            <ViewSelectedBy>
		            <TypeName>PE.ImportDir</TypeName>
		        </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>OriginalFirstThunk</Label>
                                <ScriptBlock>if ($_.OriginalFirstThunk) {"0x$($_.OriginalFirstThunk.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>TimeDateStamp</Label>
                                <ScriptBlock>(New-Object DateTime(1970, 1, 1, 0, 0, 0)).AddSeconds($_.TimeDateStamp)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ForwarderChain</Label>
                                <ScriptBlock>if ($_.ForwarderChain) {"0x$($_.ForwarderChain.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Name</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>FirstThunk</Label>
                                <ScriptBlock>if ($_.FirstThunk) {"0x$($_.FirstThunk.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>ExportDirView</Name>
            <ViewSelectedBy>
		            <TypeName>PE.ExportDir</TypeName>
		        </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>Characteristics</Label>
                                <ScriptBlock>if ($_.Characteristics) {"0x$($_.Characteristics.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>TimeDateStamp</Label>
                                <ScriptBlock>(New-Object DateTime(1970, 1, 1, 0, 0, 0)).AddSeconds($_.TimeDateStamp)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>MajorVersion</Label>
                                <ScriptBlock>if ($_.MajorVersion) {"0x$($_.MajorVersion.ToString('X4'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>MinorVersion</Label>
                                <ScriptBlock>if ($_.MinorVersion) {"0x$($_.MinorVersion.ToString('X4'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Name</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Base</Label>
                                <ScriptBlock>if ($_.Base) {"0x$($_.Base.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>NumberOfFunctions</Label>
                                <ScriptBlock>if ($_.NumberOfFunctions) {"0x$($_.NumberOfFunctions.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>NumberOfNames</Label>
                                <ScriptBlock>if ($_.NumberOfNames) {"0x$($_.NumberOfNames.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>AddressOfFunctions</Label>
                                <ScriptBlock>if ($_.AddressOfFunctions) {"0x$($_.AddressOfFunctions.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>AddressOfNames</Label>
                                <ScriptBlock>if ($_.AddressOfNames) {"0x$($_.AddressOfNames.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>AddressOfNameOrdinals</Label>
                                <ScriptBlock>if ($_.AddressOfNameOrdinals) {"0x$($_.AddressOfNameOrdinals.ToString('X8'))"}</ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>ImportView</Name>
                <ViewSelectedBy>
		            <TypeName>PE.Import</TypeName>
		        </ViewSelectedBy>
                <TableControl>
                    <AutoSize/>
                    <TableHeaders>
                        <TableColumnHeader>
                            <Label>ModuleName</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>FunctionName</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Ordinal</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>VirtualAddress</Label>
                        </TableColumnHeader>
                    </TableHeaders>
                    <TableRowEntries>
                        <TableRowEntry>
                            <TableColumnItems>
                                <TableColumnItem>
                                    <PropertyName>ModuleName</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>FunctionName</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.Ordinal) {"0x$($_.Ordinal.ToString('X4'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.RVA) {"0x$($_.RVA.ToString('X16'))"}</ScriptBlock>
                                </TableColumnItem>
                            </TableColumnItems>
                        </TableRowEntry>
                    </TableRowEntries>
                </TableControl>
        </View>
        <View>
            <Name>ExportView</Name>
                <ViewSelectedBy>
		            <TypeName>PE.Export</TypeName>
		        </ViewSelectedBy>
                <TableControl>
                    <AutoSize/>
                    <TableHeaders>
                        <TableColumnHeader>
                            <Label>FunctionName</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>ForwardedName</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Ordinal</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>RVA</Label>
                        </TableColumnHeader>
                    </TableHeaders>
                    <TableRowEntries>
                        <TableRowEntry>
                            <TableColumnItems>
                                <TableColumnItem>
                                    <PropertyName>FunctionName</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>ForwardedName</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.Ordinal) {"0x$($_.Ordinal.ToString('X4'))"}</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>if ($_.RVA) {"0x$($_.RVA.ToString('X8'))"}</ScriptBlock>
                                </TableColumnItem>
                            </TableColumnItems>
                        </TableRowEntry>
                    </TableRowEntries>
                </TableControl>
        </View>
        <View>
            <Name>MemoryInfoView</Name>
                <ViewSelectedBy>
		            <TypeName>MEM.INFO</TypeName>
		        </ViewSelectedBy>
                <TableControl>
                    <TableHeaders>
                        <TableColumnHeader>
                            <Label>BaseAddress</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>AllocationBase</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>RegionSize</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>AllocationProtect</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>State</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Protect</Label>
                        </TableColumnHeader>
                        <TableColumnHeader>
                            <Label>Type</Label>
                        </TableColumnHeader>
                    </TableHeaders>
                    <TableRowEntries>
                        <TableRowEntry>
                            <TableColumnItems>
                                <TableColumnItem>
                                    <ScriptBlock>"0x$($_.BaseAddress.ToString('X16'))"</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>"0x$($_.AllocationBase.ToString('X16'))"</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <ScriptBlock>"0x$($_.RegionSize.ToString('X16'))"</ScriptBlock>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>AllocationProtect</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>State</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>Protect</PropertyName>
                                </TableColumnItem>
                                <TableColumnItem>
                                    <PropertyName>Type</PropertyName>
                                </TableColumnItem>
                            </TableColumnItems>
                        </TableRowEntry>
                    </TableRowEntries>
                </TableControl>
        </View>
    </ViewDefinitions>
</Configuration>
